version: "3"

services:
    proxy:
        image: traefik:v2.4.2
        command:
            # - "--log.level=DEBUG"
            - "--api"
            - "--api.dashboard"
            - "--api.insecure" # Don't do that in production
            - "--providers.docker"
            - "--entrypoints.web.address=:80"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        ports:
            - "80:80"
            - "9000:8080"
    web:
        build: 
            context: ./h1st_react

        command: serve -s build
        ports:
            - "5000:5000"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.web.rule=PathPrefix(`/`)"
            - "traefik.http.routers.web.entrypoints=web"
    api:
        build: .
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - "8000:8000"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=PathPrefix(`/api/`)"
            - "traefik.http.routers.api.entrypoints=web"
        environment:
            - TENSORFLOW_SERVER=http://tf_serving:8501/v1/models
            - PYTORCH_SERVER=http://pt_serving:8080
        volumes: 
            - ./model_repo/tensorflow_models/:/app/model_repo/tensorflow_models
            - ./uploaded:/app/uploaded
    tf_serving:
        ports:
            - "8501:8501"
        volumes:
            - ./model_repo/tensorflow_models/:/models/
        image: tensorflow/serving
        command: --model_config_file=/models/models.config --model_config_file_poll_wait_seconds=6
    pt_serving:
        ports:
            - "8080:8080"
            - "8081:8081"
        volumes:
            - ./model_repo/pytorch_models:/home/model-server/model-store
        image: pytorch/torchserve
